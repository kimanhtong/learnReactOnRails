{"ast":null,"code":"var _jsxFileName = \"/vagrant/PostLHL/ReactOnRails/rails_react_recipe/app/javascript/components/NewRecipe.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"./withRouter\";\n\nvar NewRecipe = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewRecipe, _React$Component);\n\n  var _super = _createSuper(NewRecipe);\n\n  function NewRecipe(props) {\n    var _this;\n\n    _classCallCheck(this, NewRecipe);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      ingredients: \"\",\n      instruction: \"\"\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.stripHtmlEntities = _this.stripHtmlEntities.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewRecipe, [{\n    key: \"stripHtmlEntities\",\n    value: function stripHtmlEntities(str) {\n      return String(str).replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var url = \"/api/v1/recipes/create\";\n      var _this$state = this.state,\n          name = _this$state.name,\n          ingredients = _this$state.ingredients,\n          instruction = _this$state.instruction;\n      if (name.length == 0 || ingredients.length == 0 || instruction.length == 0) return;\n      var body = {\n        name: name,\n        ingredients: ingredients,\n        instruction: instruction.replace(/\\n/g, \"<br> <br>\")\n      };\n      console.log(body);\n      var token = document.querySelector('meta[name=\"csrf-token\"]').content; // fetch(url, {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"X-CSRF-Token\": token,\n      //     \"Content-Type\": \"application/json\"\n      //   },\n      //   body: JSON.stringify(body)\n      // })\n      //   .then(response => {\n      //     if (response.ok) {\n      //       return response.json();\n      //     }\n      //     throw new Error(\"Network response was not ok.\");\n      //   })\n      //   .then(response => this.props.history.push(`/recipe/${response.id}`))\n      //   .catch(error => console.log(error.message));\n\n      var fetchRecipeJSON = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var response, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                      \"X-CSRF-Token\": token,\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(body)\n                  });\n\n                case 2:\n                  response = _context.sent;\n                  _context.next = 5;\n                  return response.json();\n\n                case 5:\n                  data = _context.sent;\n                  console.log(data);\n                  return _context.abrupt(\"return\", data);\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function fetchRecipeJSON() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchRecipeJSON().then(function (response) {\n        return _this2.props.navigate(\"/recipe/\".concat(response.id));\n      })[\"catch\"](function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-lg-6 offset-lg-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"font-weight-normal mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"Add a new recipe to our awesome recipe collection.\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"recipeName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Recipe name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"recipeName\",\n        className: \"form-control\",\n        required: true,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"recipeIngredients\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ingredients\",\n        id: \"recipeIngredients\",\n        className: \"form-control\",\n        required: true,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        id: \"ingredientsHelp\",\n        className: \"form-text text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"Separate each ingredient with a comma.\")), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"instruction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, \"Preparation Instructions\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"instruction\",\n        name: \"instruction\",\n        rows: \"5\",\n        required: true,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn custom-button mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"Create Recipe\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/recipes\",\n        className: \"btn btn-link mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"Back to recipes\")))));\n    }\n  }]);\n\n  return NewRecipe;\n}(React.Component);\n\nexport default withRouter(NewRecipe);","map":{"version":3,"sources":["/vagrant/PostLHL/ReactOnRails/rails_react_recipe/app/javascript/components/NewRecipe.jsx"],"names":["React","Link","withRouter","NewRecipe","props","state","name","ingredients","instruction","onChange","bind","onSubmit","stripHtmlEntities","str","String","replace","event","setState","target","value","preventDefault","url","length","body","console","log","token","document","querySelector","content","fetchRecipeJSON","fetch","method","headers","JSON","stringify","response","json","data","then","navigate","id","error","message","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"./withRouter\";\n\nclass NewRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      ingredients: \"\",\n      instruction: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\n  }\n\n  stripHtmlEntities(str) {\n    return String(str)\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const url = \"/api/v1/recipes/create\";\n    const { name, ingredients, instruction } = this.state;\n\n    if (name.length == 0 || ingredients.length == 0 || instruction.length == 0)\n      return;\n\n    const body = {\n      name,\n      ingredients,\n      instruction: instruction.replace(/\\n/g, \"<br> <br>\")\n    };\n    console.log(body);\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    // fetch(url, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"X-CSRF-Token\": token,\n    //     \"Content-Type\": \"application/json\"\n    //   },\n    //   body: JSON.stringify(body)\n    // })\n    //   .then(response => {\n    //     if (response.ok) {\n    //       return response.json();\n    //     }\n    //     throw new Error(\"Network response was not ok.\");\n    //   })\n    //   .then(response => this.props.history.push(`/recipe/${response.id}`))\n    //   .catch(error => console.log(error.message));\n\n    const fetchRecipeJSON = async () => {\n      let response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRF-Token\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      let data = await response.json();\n      console.log(data);\n      return data;\n    };\n    fetchRecipeJSON()\n    .then(response => this.props.navigate(`/recipe/${response.id}`))\n    .catch(error => console.log(error.message));\n\n  \n\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-6 offset-lg-3\">\n            <h1 className=\"font-weight-normal mb-5\">\n              Add a new recipe to our awesome recipe collection.\n            </h1>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"recipeName\">Recipe name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"recipeName\"\n                  className=\"form-control\"\n                  required\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"recipeIngredients\">Ingredients</label>\n                <input\n                  type=\"text\"\n                  name=\"ingredients\"\n                  id=\"recipeIngredients\"\n                  className=\"form-control\"\n                  required\n                  onChange={this.onChange}\n                />\n                <small id=\"ingredientsHelp\" className=\"form-text text-muted\">\n                  Separate each ingredient with a comma.\n                </small>\n              </div>\n              <label htmlFor=\"instruction\">Preparation Instructions</label>\n              <textarea\n                className=\"form-control\"\n                id=\"instruction\"\n                name=\"instruction\"\n                rows=\"5\"\n                required\n                onChange={this.onChange}\n              />\n              <button type=\"submit\" className=\"btn custom-button mt-3\">\n                Create Recipe\n              </button>\n              <Link to=\"/recipes\" className=\"btn btn-link mt-3\">\n                Back to recipes\n              </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(NewRecipe);"]},"metadata":{},"sourceType":"module"}
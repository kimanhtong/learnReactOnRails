{"ast":null,"code":"var _jsxFileName = \"/vagrant/PostLHL/ReactOnRails/rails_react_recipe/app/javascript/components/NewRecipe.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"./withRouter\";\n\nvar NewRecipe = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewRecipe, _React$Component);\n\n  var _super = _createSuper(NewRecipe);\n\n  function NewRecipe(props) {\n    var _this;\n\n    _classCallCheck(this, NewRecipe);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      ingredients: \"\",\n      instruction: \"\"\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this)); // this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\n\n    _this.fetchRecipe = _this.fetchRecipe.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewRecipe, [{\n    key: \"fetchRecipe\",\n    value: function fetchRecipe() {\n      var _this2 = this;\n\n      var url = \"/api/v1/show/\".concat(this.props.id);\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState(data);\n      })[\"catch\"](function (err) {\n        console.log(err);\n\n        _this2.props.navigate(\"/recipes\");\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: // stripHtmlEntities(str) {\n    //   return String(str)\n    //     .replace(/</g, \"&lt;\")\n    //     .replace(/>/g, \"&gt;\");\n    // }\n    function onChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var url = \"/api/v1/recipes/create\"; // new recipe\n\n      if (this.props.id) {\n        // edit recipe\n        url = \"/api/v1/update/\".concat(this.props.id);\n      }\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          ingredients = _this$state.ingredients,\n          instruction = _this$state.instruction;\n      if (name.length == 0 || ingredients.length == 0 || instruction.length == 0) return;\n      var body = {\n        name: name,\n        ingredients: ingredients,\n        instruction: instruction.replace(/\\n/g, \"<br> <br>\")\n      };\n      var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRF-Token\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(\"Network response was not ok.\");\n      }).then(function (response) {\n        return _this3.props.navigate(\"/recipe/view/\".concat(response.id));\n      })[\"catch\"](function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.id) {\n        this.fetchRecipe();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('recipe id: ', this.props.id);\n      console.log('recipe details: ', this.state);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-lg-6 offset-lg-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, this.props.id && /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"font-weight-normal mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, \"Edit your recipe to update our awesome recipe collection.\"), !this.props.id && /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"font-weight-normal mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"Add a new recipe to our awesome recipe collection.\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"recipeName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Recipe name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"recipeName\",\n        className: \"form-control\",\n        required: true,\n        onChange: this.onChange,\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"recipeIngredients\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ingredients\",\n        id: \"recipeIngredients\",\n        className: \"form-control\",\n        required: true,\n        onChange: this.onChange,\n        value: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        id: \"ingredientsHelp\",\n        className: \"form-text text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, \"Separate each ingredient with a comma.\")), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"instruction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, \"Preparation Instructions\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"instruction\",\n        name: \"instruction\",\n        rows: \"5\",\n        required: true,\n        onChange: this.onChange,\n        value: this.state.instruction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }), !this.props.id && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn custom-button mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, \"Create Recipe\"), this.props.id && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn custom-button mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, \"Save Recipe\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/recipes\",\n        className: \"btn btn-link mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"Back to recipes\")))));\n    }\n  }]);\n\n  return NewRecipe;\n}(React.Component);\n\nexport default withRouter(NewRecipe);","map":{"version":3,"sources":["/vagrant/PostLHL/ReactOnRails/rails_react_recipe/app/javascript/components/NewRecipe.jsx"],"names":["React","Link","withRouter","NewRecipe","props","state","name","ingredients","instruction","onChange","bind","onSubmit","fetchRecipe","url","id","fetch","then","res","json","data","setState","err","console","log","navigate","event","target","value","preventDefault","length","body","replace","token","document","querySelector","content","method","headers","JSON","stringify","response","ok","Error","error","message","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"./withRouter\";\n\nclass NewRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      ingredients: \"\",\n      instruction: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    // this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\n    this.fetchRecipe = this.fetchRecipe.bind(this)\n  }\n\n  fetchRecipe() {\n    const url = `/api/v1/show/${this.props.id}`;\n    fetch(url)\n    .then (res => res.json())\n    .then (data =>  {\n      this.setState(data);\n    })\n    .catch (err => {\n      console.log(err);\n      this.props.navigate(\"/recipes\");\n    })\n  };\n\n  // stripHtmlEntities(str) {\n  //   return String(str)\n  //     .replace(/</g, \"&lt;\")\n  //     .replace(/>/g, \"&gt;\");\n  // }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    let url = \"/api/v1/recipes/create\"; // new recipe\n    if (this.props.id) {  // edit recipe\n      url = `/api/v1/update/${this.props.id}`;\n    }\n    const { name, ingredients, instruction } = this.state;\n    if (name.length == 0 || ingredients.length == 0 || instruction.length == 0)\n      return;\n\n    const body = {\n      name,\n      ingredients,\n      instruction: instruction.replace(/\\n/g, \"<br> <br>\")\n    };\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(response => this.props.navigate(`/recipe/view/${response.id}`))\n      .catch(error => console.log(error.message));\n  }\n  componentDidMount() {\n    if (this.props.id) {\n      this.fetchRecipe();\n    }\n }\n  render() {\n    console.log('recipe id: ', this.props.id);\n    console.log('recipe details: ', this.state);\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-6 offset-lg-3\">\n            {this.props.id &&\n            <h1 className=\"font-weight-normal mb-5\">\n              Edit your recipe to update our awesome recipe collection.\n            </h1>}\n            {!this.props.id &&\n            <h1 className=\"font-weight-normal mb-5\">\n              Add a new recipe to our awesome recipe collection.\n            </h1>}\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"recipeName\">Recipe name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"recipeName\"\n                  className=\"form-control\"\n                  required\n                  onChange={this.onChange}\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"recipeIngredients\">Ingredients</label>\n                <input\n                  type=\"text\"\n                  name=\"ingredients\"\n                  id=\"recipeIngredients\"\n                  className=\"form-control\"\n                  required\n                  onChange={this.onChange}\n                  value={this.state.ingredients}\n                />\n                <small id=\"ingredientsHelp\" className=\"form-text text-muted\">\n                  Separate each ingredient with a comma.\n                </small>\n              </div>\n              <label htmlFor=\"instruction\">Preparation Instructions</label>\n              <textarea\n                className=\"form-control\"\n                id=\"instruction\"\n                name=\"instruction\"\n                rows=\"5\"\n                required\n                onChange={this.onChange}\n                value={this.state.instruction}\n              />\n              {!this.props.id &&\n              <button type=\"submit\" className=\"btn custom-button mt-3\">\n                Create Recipe\n              </button>}\n              {this.props.id &&\n              <button type=\"submit\" className=\"btn custom-button mt-3\">\n                Save Recipe\n              </button>}\n              <Link to=\"/recipes\" className=\"btn btn-link mt-3\">\n                Back to recipes\n              </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(NewRecipe);"]},"metadata":{},"sourceType":"module"}